// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sidkenu.Infraestructura;

#nullable disable

namespace Sidkenu.Infraestructura.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240103005729_AddCampoInteresTransfChequeEnConfig")]
    partial class AddCampoInteresTransfChequeEnConfig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ArticuloBaja", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticuloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cantidad")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MotivoBajaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("MotivoBajaId");

                    b.ToTable("ArticuloBajas", null, t =>
                        {
                            t.HasTrigger("ArticuloBajas_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ArticuloBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CodigoBarra")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DescripcionAdicional")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Detalle")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Foto")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("PerfilArticulo")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioCosto")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("TipoArticulo")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId", "Descripcion")
                        .IsUnique()
                        .HasFilter("[EmpresaId] IS NOT NULL");

                    b.ToTable("Articulos", null, t =>
                        {
                            t.HasTrigger("Articulos_Trigger");
                        });

                    b.HasDiscriminator<string>("Discriminator").HasValue("ArticuloBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ArticuloDeposito", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticuloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cantidad")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid>("DepositoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepositoId");

                    b.HasIndex("ArticuloId", "DepositoId")
                        .IsUnique();

                    b.ToTable("ArticuloDepositos", null, t =>
                        {
                            t.HasTrigger("ArticuloDepositos_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ArticuloFormula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticuloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticuloSecundarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cantidad")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("ArticuloSecundarioId");

                    b.ToTable("ArticuloFormulas", null, t =>
                        {
                            t.HasTrigger("ArticuloFormulas_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ArticuloHistorialCosto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticuloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PrecioCostoAnterior")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioCostoNuevo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.ToTable("ArticuloHistorialCostos", null, t =>
                        {
                            t.HasTrigger("ArticuloHistorialCostos_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ArticuloKit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticuloHijoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticuloPadreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cantidad")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloHijoId");

                    b.HasIndex("ArticuloPadreId");

                    b.ToTable("ArticuloKits", null, t =>
                        {
                            t.HasTrigger("ArticuloKits_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ArticuloOpcional", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticuloHijoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticuloPadreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloHijoId");

                    b.HasIndex("ArticuloPadreId");

                    b.ToTable("ArticuloOpcionales", null, t =>
                        {
                            t.HasTrigger("ArticuloOpcionales_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ArticuloPrecio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticuloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ListaPrecioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("ListaPrecioId");

                    b.ToTable("ArticuloPrecios", null, t =>
                        {
                            t.HasTrigger("ArticuloPrecios_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ArticuloProveedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticuloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoProveedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProveedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("ArticuloId", "ProveedorId")
                        .IsUnique();

                    b.ToTable("ArticuloProveedores", null, t =>
                        {
                            t.HasTrigger("ArticuloProveedores_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Banco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Descripcion")
                        .IsUnique();

                    b.ToTable("Bancos", null, t =>
                        {
                            t.HasTrigger("Bancos_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Caja", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<bool>("PermiteGastos")
                        .HasColumnType("bit");

                    b.Property<bool>("PermitePagosProveedor")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId", "Descripcion")
                        .IsUnique();

                    b.ToTable("Cajas", null, t =>
                        {
                            t.HasTrigger("Cajas_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.CajaDetalle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CajaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Diferencia")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoCaja")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaApertura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCierre")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontoApertura")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("MontoCierre")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("MontoSistema")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid>("PersonaAperturaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PersonaCierreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CajaId");

                    b.HasIndex("PersonaAperturaId");

                    b.HasIndex("PersonaCierreId");

                    b.ToTable("CajaDetalles", null, t =>
                        {
                            t.HasTrigger("CajaDetalles_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ActivarBonificacion")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivarCuentaCorriente")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Bonificacion")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaNacimiento")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ListaPrecioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("MontoMaximoCompra")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("TipoDocumentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TipoResponsabilidadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ListaPrecioId");

                    b.HasIndex("TipoDocumentoId");

                    b.HasIndex("TipoResponsabilidadId");

                    b.HasIndex("EmpresaId", "Documento")
                        .IsUnique()
                        .HasFilter("[EmpresaId] IS NOT NULL");

                    b.ToTable("Clientes", null, t =>
                        {
                            t.HasTrigger("Clientes_Trigger");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("ef055a76-e524-4810-8878-29bc341ed84f"),
                            ActivarBonificacion = false,
                            ActivarCuentaCorriente = false,
                            Bonificacion = 0m,
                            Direccion = "Libertad",
                            Documento = "99999999",
                            EstaEliminado = false,
                            FechaNacimiento = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mail = "consumidorfinal@gmail.com",
                            MontoMaximoCompra = 0m,
                            RazonSocial = "Consumidor Final",
                            Telefono = "9999999",
                            TipoDocumentoId = new Guid("63897b81-1101-4463-ba46-f70be96b87b8"),
                            TipoResponsabilidadId = new Guid("2603c2a9-65e4-49f0-aa2b-bbce16648982"),
                            User = "semilla@tsidkenu.com"
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ComprobanteCompra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Iva105")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Iva21")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Iva27")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("NumeroCompra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PercepcionIB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PercepcionIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PercepcionPyP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PercepcionTemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProveedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoComprobante")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProveedorId");

                    b.ToTable("ComprobanteCompra", t =>
                        {
                            t.HasTrigger("ComprobanteCompra_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ComprobanteSalon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoComprobanteSalon")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MesaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<Guid>("PersonaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoComprobante")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MesaId");

                    b.HasIndex("PersonaId");

                    b.ToTable("ComprobanteSalon", t =>
                        {
                            t.HasTrigger("ComprobanteSalon_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.CondicionIva", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AplicaParaFacturaElectronica")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId", "Descripcion")
                        .IsUnique()
                        .HasFilter("[EmpresaId] IS NOT NULL");

                    b.ToTable("CondicionIvas", null, t =>
                        {
                            t.HasTrigger("CondicionIvas_Trigger");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("d3d1831d-0008-4a5a-9e5b-620cbc536b43"),
                            AplicaParaFacturaElectronica = false,
                            Codigo = "0",
                            Descripcion = "No Corresponde",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com",
                            Valor = 0m
                        },
                        new
                        {
                            Id = new Guid("1d748bb3-2fd2-4750-88af-3e10292e930e"),
                            AplicaParaFacturaElectronica = true,
                            Codigo = "1",
                            Descripcion = "No Gravado",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com",
                            Valor = 0m
                        },
                        new
                        {
                            Id = new Guid("c6fd97a3-a7ae-4c54-a865-a95fdb87c828"),
                            AplicaParaFacturaElectronica = true,
                            Codigo = "2",
                            Descripcion = "Exento",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com",
                            Valor = 0m
                        },
                        new
                        {
                            Id = new Guid("1621a2f8-3bcd-42b1-87d2-2f67077ae894"),
                            AplicaParaFacturaElectronica = true,
                            Codigo = "3",
                            Descripcion = "0 %",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com",
                            Valor = 0m
                        },
                        new
                        {
                            Id = new Guid("e9d9bcf8-314d-43be-a37e-22b9e550bba6"),
                            AplicaParaFacturaElectronica = true,
                            Codigo = "4",
                            Descripcion = "10,50 %",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com",
                            Valor = 10.5m
                        },
                        new
                        {
                            Id = new Guid("2242b123-ae39-4ac5-86f8-7784a6040ddb"),
                            AplicaParaFacturaElectronica = true,
                            Codigo = "5",
                            Descripcion = "21 %",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com",
                            Valor = 21m
                        },
                        new
                        {
                            Id = new Guid("4573ab02-ad74-410c-af78-b5aa50208292"),
                            AplicaParaFacturaElectronica = true,
                            Codigo = "6",
                            Descripcion = "27 %",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com",
                            Valor = 27m
                        },
                        new
                        {
                            Id = new Guid("9f018fff-8bab-4036-88b4-34c417d58460"),
                            AplicaParaFacturaElectronica = true,
                            Codigo = "7",
                            Descripcion = "Gravado",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com",
                            Valor = 0m
                        },
                        new
                        {
                            Id = new Guid("f37613eb-954b-4c52-8814-2e28642cd495"),
                            AplicaParaFacturaElectronica = true,
                            Codigo = "8",
                            Descripcion = "5 %",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com",
                            Valor = 5m
                        },
                        new
                        {
                            Id = new Guid("f7234e69-5f2b-4a02-a14d-db5935aea702"),
                            AplicaParaFacturaElectronica = true,
                            Codigo = "9",
                            Descripcion = "2,50 %",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com",
                            Valor = 2.5m
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ConfiguracionBalanza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CantidadIdentificarCodigoArcitulo")
                        .HasColumnType("int");

                    b.Property<int>("CantidadIdentificarImportePrecio")
                        .HasColumnType("int");

                    b.Property<int>("CantidadIdentificarTipo")
                        .HasColumnType("int");

                    b.Property<int>("CodigoIdentificarImporte")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int>("CodigoIdentificarPeso")
                        .HasColumnType("int");

                    b.Property<bool>("ConvierteUnidadPeso")
                        .HasColumnType("bit");

                    b.Property<int>("DecimalPeso")
                        .HasColumnType("int");

                    b.Property<int>("DecimalesImporte")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Equivalencia")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<int>("InicioIdentificarCodigoArcitulo")
                        .HasColumnType("int");

                    b.Property<int>("InicioIdentificarImportePrecio")
                        .HasColumnType("int");

                    b.Property<int>("InicioIdentificarTipo")
                        .HasColumnType("int");

                    b.Property<int>("LongitudTotal")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId")
                        .IsUnique();

                    b.ToTable("ConfiguracionBalanzas", null, t =>
                        {
                            t.HasTrigger("ConfiguracionBalanzas_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ConfiguracionCore", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ActivarAumentoPrecioPorFamilia")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivarAumentoPrecioPorFamiliaListaPrecio")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivarAumentoPrecioPorMarca")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivarAumentoPrecioPorMarcaListaPrecio")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivarInteresPorCheque")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivarInteresPorTransferencia")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivarStockPorVencimientoLote")
                        .HasColumnType("bit");

                    b.Property<bool>("ActualizarPrecioFinalizarLaFabricacion")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CantidadAproximadaFabricacionArticulos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("DepositoPorDefectoParaCompraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepositoPorDefectoParaVentaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DescuentoAutorizacion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("EmpleadoAutorizaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<bool>("IncorporarCostoFabricacion")
                        .HasColumnType("bit");

                    b.Property<decimal?>("InteresPorCheque")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("InteresPorTransferencia")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ListaPrecioPorDefectoParaVentaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("PedirAutorizacion")
                        .HasColumnType("bit");

                    b.Property<bool>("PedirAutorizacionDescuento")
                        .HasColumnType("bit");

                    b.Property<bool>("SepararPuntoVentaCaja")
                        .HasColumnType("bit");

                    b.Property<bool>("UnificarRenglonesIngresarMismoArticulo")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepositoPorDefectoParaCompraId");

                    b.HasIndex("DepositoPorDefectoParaVentaId");

                    b.HasIndex("EmpresaId")
                        .IsUnique();

                    b.HasIndex("ListaPrecioPorDefectoParaVentaId");

                    b.ToTable("ConfiguracionCores", null, t =>
                        {
                            t.HasTrigger("ConfiguracionCores_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Contador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<long>("Numero")
                        .HasColumnType("bigint");

                    b.Property<int>("TipoContador")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId", "TipoContador")
                        .IsUnique();

                    b.ToTable("Contadores", null, t =>
                        {
                            t.HasTrigger("Contadores_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.CostoFabricacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("CostoFabricaciones", null, t =>
                        {
                            t.HasTrigger("CostoFabricaciones_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.CuentaCorrienteCliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("NroComprobanteFactura")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoMovimiento")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("CuentaCorrienteClientes", null, t =>
                        {
                            t.HasTrigger("CuentaCorrienteClientes_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.CuentaCorrienteProveedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComprobanteCompraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("TipoMovimiento")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComprobanteCompraId");

                    b.ToTable("CuentaCorrienteProveedores", null, t =>
                        {
                            t.HasTrigger("CuentaCorrienteProveedores_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Deposito", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PersonaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Predeterminado")
                        .HasColumnType("bit");

                    b.Property<int>("TipoDeposito")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.HasIndex("EmpresaId", "Descripcion")
                        .IsUnique();

                    b.ToTable("Depositos", null, t =>
                        {
                            t.HasTrigger("Depositos_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Familia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ActivarAumentoPrecioHoraVenta")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivarAumentoPrecioPublico")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivarAumentoPrecioPublicoListaPrecio")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivarRestriccionHoraVenta")
                        .HasColumnType("bit");

                    b.Property<decimal?>("AumentoPrecioHoraVenta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AumentoPrecioHoraVentaDesde")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AumentoPrecioHoraVentaHasta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("AumentoPrecioPublico")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AumentoPrecioPublicoListaPrecio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("RestriccionHoraVentaDesde")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestriccionHoraVentaHasta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoValor")
                        .HasColumnType("int");

                    b.Property<int?>("TipoValorPublico")
                        .HasColumnType("int");

                    b.Property<int?>("TipoValorPublicoListaPrecio")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId", "Descripcion")
                        .IsUnique()
                        .HasFilter("[EmpresaId] IS NOT NULL");

                    b.ToTable("Familias", null, t =>
                        {
                            t.HasTrigger("Familias_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.FamiliaCaja", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CajaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<Guid>("FamiliaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CajaId");

                    b.HasIndex("FamiliaId");

                    b.ToTable("FamiliaCajas", null, t =>
                        {
                            t.HasTrigger("FamiliaCajas_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.FamiliaListaPrecio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmpresaId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<Guid>("FamiliaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ListaPrecioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoValor")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("FamiliaId");

                    b.HasIndex("ListaPrecioId");

                    b.HasIndex("EmpresaId", "FamiliaId", "ListaPrecioId")
                        .IsUnique();

                    b.ToTable("FamiliaListaPrecios", null, t =>
                        {
                            t.HasTrigger("FamiliaListaPrecios_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Gasto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid>("TipoGastoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("TipoGastoId");

                    b.ToTable("Gastos", null, t =>
                        {
                            t.HasTrigger("Gastos_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ListaPrecio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<decimal>("Rentabilidad")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId", "Descripcion")
                        .IsUnique();

                    b.ToTable("ListaPrecios", null, t =>
                        {
                            t.HasTrigger("ListaPrecios_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Marca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ActivarAumentoPrecioPublico")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivarAumentoPrecioPublicoListaPrecio")
                        .HasColumnType("bit");

                    b.Property<decimal?>("AumentoPrecioPublico")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AumentoPrecioPublicoListaPrecio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<int?>("TipoValorPublico")
                        .HasColumnType("int");

                    b.Property<int?>("TipoValorPublicoListaPrecio")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId", "Descripcion")
                        .IsUnique()
                        .HasFilter("[EmpresaId] IS NOT NULL");

                    b.ToTable("Marcas", null, t =>
                        {
                            t.HasTrigger("Marcas_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.MarcaListaPrecio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmpresaId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<Guid>("ListaPrecioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MarcaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoValor")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("ListaPrecioId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("EmpresaId", "MarcaId", "ListaPrecioId")
                        .IsUnique();

                    b.ToTable("MarcaListaPrecios", null, t =>
                        {
                            t.HasTrigger("MarcaListaPrecios_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Mesa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoMesa")
                        .HasColumnType("int");

                    b.Property<Guid>("SalonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SalonId", "Descripcion")
                        .IsUnique();

                    b.ToTable("Mesas", null, t =>
                        {
                            t.HasTrigger("Mesas_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.MotivoBaja", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId", "Descripcion")
                        .IsUnique()
                        .HasFilter("[EmpresaId] IS NOT NULL");

                    b.ToTable("MotivoBajas", null, t =>
                        {
                            t.HasTrigger("MotivoBajas_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.MovimientoCaja", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CajaDetalleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoMovimiento")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CajaDetalleId");

                    b.ToTable("MovimientoCajas", null, t =>
                        {
                            t.HasTrigger("MovimientoCajas_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.MovimientoCtaCteCliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CajaDetalleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CuentaCorrienteClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CajaDetalleId");

                    b.HasIndex("CuentaCorrienteClienteId");

                    b.ToTable("MovimientoCtaCteClientes", null, t =>
                        {
                            t.HasTrigger("MovimientoCtaCteClientes_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.MovimientoCtaCteProveedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CajaDetalleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CuentaCorrienteProveedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CajaDetalleId");

                    b.HasIndex("CuentaCorrienteProveedorId");

                    b.ToTable("MovimientoCtaCteProveedores", null, t =>
                        {
                            t.HasTrigger("MovimientoCtaCteProveedores_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.MovimientoGasto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CajaDetalleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GastoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CajaDetalleId");

                    b.HasIndex("GastoId");

                    b.ToTable("MovimientoGasto", null, t =>
                        {
                            t.HasTrigger("MovimientoGasto_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.OrdenFabricacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ActulizarPrecioPublico")
                        .HasColumnType("bit");

                    b.Property<Guid>("ArticuloBaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CantidadFabricar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("DepositoDestinoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepositoOrigenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoOrdenFabricacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("OrigenFabricacion")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloBaseId");

                    b.HasIndex("DepositoDestinoId");

                    b.HasIndex("DepositoOrigenId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("Numero")
                        .IsUnique();

                    b.ToTable("OrdenFabricaciones", null, t =>
                        {
                            t.HasTrigger("OrdenFabricaciones_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.OrdenFabricacionDetalle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticuloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cantidad")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<Guid>("OrdenFabricacionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("OrdenFabricacionId");

                    b.ToTable("OrdenFabricacionDetalles", null, t =>
                        {
                            t.HasTrigger("OrdenFabricacionDetalles_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.PlanTarjeta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Alicuota")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<Guid>("TarjetaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TarjetaId", "Descripcion")
                        .IsUnique();

                    b.ToTable("PlanTarjetas", null, t =>
                        {
                            t.HasTrigger("PlanTarjetas_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Proveedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ActivarCuentaCorriente")
                        .HasColumnType("bit");

                    b.Property<string>("CUIT")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("TipoResponsabilidadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TipoResponsabilidadId");

                    b.HasIndex("EmpresaId", "CUIT")
                        .IsUnique()
                        .HasFilter("[EmpresaId] IS NOT NULL");

                    b.ToTable("Proveedores", null, t =>
                        {
                            t.HasTrigger("Proveedores_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Salon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ListaPrecioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ListaPrecioId");

                    b.HasIndex("EmpresaId", "Descripcion")
                        .IsUnique();

                    b.ToTable("Salones", null, t =>
                        {
                            t.HasTrigger("Salones_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Tarjeta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Descripcion")
                        .IsUnique();

                    b.ToTable("Tarjetas", null, t =>
                        {
                            t.HasTrigger("Tarjetas_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.TipoDocumento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Descripcion")
                        .IsUnique();

                    b.ToTable("TipoDocumentos", null, t =>
                        {
                            t.HasTrigger("TipoDocumentos_Trigger");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("40abaf4a-ee5c-4969-a9bc-f69490866b09"),
                            Descripcion = "Sin Identificación",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        },
                        new
                        {
                            Id = new Guid("f29fdf0f-4c5a-4991-9c8e-78d339797bd8"),
                            Descripcion = "CUIT",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        },
                        new
                        {
                            Id = new Guid("a0196f39-90e5-44c4-9662-0f44ac0d5657"),
                            Descripcion = "CUIL",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        },
                        new
                        {
                            Id = new Guid("63897b81-1101-4463-ba46-f70be96b87b8"),
                            Descripcion = "DNI",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        },
                        new
                        {
                            Id = new Guid("0b1d98f4-9668-41db-bc3c-6f5a816242d6"),
                            Descripcion = "Pasaporte",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        },
                        new
                        {
                            Id = new Guid("7a48d84c-cf13-4d0b-94fb-9f1c4769899c"),
                            Descripcion = "Libreta Civica",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        },
                        new
                        {
                            Id = new Guid("b446be1e-7648-44cd-8ade-f19a2b1655a0"),
                            Descripcion = "Libreta Enrole",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.TipoGasto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId", "Descripcion")
                        .IsUnique()
                        .HasFilter("[EmpresaId] IS NOT NULL");

                    b.ToTable("TipoGastos", null, t =>
                        {
                            t.HasTrigger("TipoGastos_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.UnidadMedida", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Equivalencia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId", "Descripcion")
                        .IsUnique()
                        .HasFilter("[EmpresaId] IS NOT NULL");

                    b.ToTable("UnidadMedidas", null, t =>
                        {
                            t.HasTrigger("UnidadMedidas_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Variante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId", "Descripcion")
                        .IsUnique()
                        .HasFilter("[EmpresaId] IS NOT NULL");

                    b.ToTable("Variantes", null, t =>
                        {
                            t.HasTrigger("Variantes_Trigger");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("f22e54a7-b191-4751-b218-a8e7917527d7"),
                            Codigo = "VAR9999",
                            Descripcion = "Variante Defecto",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.VarianteValor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VarianteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VarianteId", "Descripcion")
                        .IsUnique();

                    b.ToTable("VarianteValores", null, t =>
                        {
                            t.HasTrigger("VarianteValores_Trigger");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("51ea6aff-694e-4ec7-b699-1f56041b3d03"),
                            Codigo = "VAR9999",
                            Descripcion = "Variante Valor Defecto",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com",
                            VarianteId = new Guid("f22e54a7-b191-4751-b218-a8e7917527d7")
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.ConfiguracionSeguridad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EnviarMailCreateUsuario")
                        .HasColumnType("bit");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LogError")
                        .HasColumnType("bit");

                    b.Property<bool>("LogInformacion")
                        .HasColumnType("bit");

                    b.Property<bool>("LogWarning")
                        .HasColumnType("bit");

                    b.Property<bool>("LoginNormal")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordCredencial")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Puerto")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCredencial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId")
                        .IsUnique();

                    b.ToTable("ConfiguracionesSeguridad", null, t =>
                        {
                            t.HasTrigger("ConfiguracionesSeguridad_Trigger");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("47544bcb-1b9a-4374-bb38-aebad0b8215e"),
                            EmpresaId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EnviarMailCreateUsuario = true,
                            EstaEliminado = false,
                            Host = "smtp.gmail.com",
                            LogError = true,
                            LogInformacion = true,
                            LogWarning = true,
                            LoginNormal = false,
                            PasswordCredencial = "yoggzvkvkqhsjsuz",
                            Puerto = 587,
                            User = "semilla@tsidkenu.com",
                            UsuarioCredencial = "sidkenusoftware@gmail.com"
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abreviatura")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaInicioActividad")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IngresoBrutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocalidadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Logo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NroIngresoBruto")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Referente")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("TipoResponsabilidadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("IngresoBrutoId");

                    b.HasIndex("LocalidadId");

                    b.HasIndex("TipoResponsabilidadId");

                    b.ToTable("Empresas", null, t =>
                        {
                            t.HasTrigger("Empresas_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.EmpresaPersona", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<Guid>("PersonaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("PersonaId", "EmpresaId")
                        .IsUnique();

                    b.ToTable("EmpresasPersonas", null, t =>
                        {
                            t.HasTrigger("EmpresasPersonas_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.Formulario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DescripcionCompleta")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<bool>("EstaVigente")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Formularios", null, t =>
                        {
                            t.HasTrigger("Formularios_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.Grupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<bool>("PorDefecto")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId", "Descripcion")
                        .IsUnique();

                    b.ToTable("Grupos", null, t =>
                        {
                            t.HasTrigger("Grupos_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.GrupoFormulario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<Guid>("FormularioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormularioId");

                    b.HasIndex("GrupoId", "FormularioId")
                        .IsUnique();

                    b.ToTable("GrupoFormularios", null, t =>
                        {
                            t.HasTrigger("GrupoFormularios_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.GrupoPersona", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.HasIndex("GrupoId", "PersonaId")
                        .IsUnique();

                    b.ToTable("GrupoPersonas", null, t =>
                        {
                            t.HasTrigger("GrupoPersonas_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.IngresoBruto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Descripcion")
                        .IsUnique();

                    b.ToTable("IngresosBrutos", null, t =>
                        {
                            t.HasTrigger("IngresosBrutos_Trigger");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("d5e97000-0189-4072-831d-6ec62a5a6909"),
                            Descripcion = "Simplificado",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        },
                        new
                        {
                            Id = new Guid("8acc2c37-d68c-4f8a-a767-18e9ae836776"),
                            Descripcion = "Local ",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        },
                        new
                        {
                            Id = new Guid("ca4c5d04-e0b8-41dd-911d-4eea1ff0980e"),
                            Descripcion = "Convenio Multilateral",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.Localidad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProvinciaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId", "Descripcion")
                        .IsUnique();

                    b.ToTable("Localidades", null, t =>
                        {
                            t.HasTrigger("Localidades_Trigger");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("1fd20729-4cc5-4d28-8434-1082fb176ff0"),
                            Descripcion = "San Miguel de Tucuman",
                            EstaEliminado = false,
                            ProvinciaId = new Guid("333660cf-0361-4c43-ba26-3bd9833d9779"),
                            User = "semilla@tsidkenu.com"
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.Modulo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Caja")
                        .HasColumnType("bit");

                    b.Property<bool>("Compra")
                        .HasColumnType("bit");

                    b.Property<bool>("Dashboard")
                        .HasColumnType("bit");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<bool>("Fabricacion")
                        .HasColumnType("bit");

                    b.Property<bool>("Inventario")
                        .HasColumnType("bit");

                    b.Property<bool>("PuntoVenta")
                        .HasColumnType("bit");

                    b.Property<bool>("Seguridad")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Venta")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId")
                        .IsUnique();

                    b.ToTable("Modulos", null, t =>
                        {
                            t.HasTrigger("Modulos_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.Persona", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Cuil")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Foto")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Cuil")
                        .IsUnique();

                    b.ToTable("Personas", null, t =>
                        {
                            t.HasTrigger("Personas_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.Provincia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Descripcion")
                        .IsUnique();

                    b.ToTable("Provincias", null, t =>
                        {
                            t.HasTrigger("Provincias_Trigger");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("333660cf-0361-4c43-ba26-3bd9833d9779"),
                            Descripcion = "Tucuman",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.TipoResponsabilidad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Descripcion")
                        .IsUnique();

                    b.ToTable("TiposResponsabilidades", null, t =>
                        {
                            t.HasTrigger("TiposResponsabilidades_Trigger");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("c89f9a27-702f-40a9-8a80-5c57c4693128"),
                            Codigo = 1,
                            Descripcion = "IVA Responsable No Inscripto",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        },
                        new
                        {
                            Id = new Guid("a712cacd-65ef-4746-a7c2-a3f8ff408a40"),
                            Codigo = 4,
                            Descripcion = "IVA Sujeto Exento",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        },
                        new
                        {
                            Id = new Guid("2603c2a9-65e4-49f0-aa2b-bbce16648982"),
                            Codigo = 5,
                            Descripcion = "Consumidor Final",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        },
                        new
                        {
                            Id = new Guid("76191754-8edf-47b6-8796-ec0826e7c600"),
                            Codigo = 6,
                            Descripcion = "Responsable Monotributo",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        },
                        new
                        {
                            Id = new Guid("95999cde-92d5-419a-b047-40b164efec45"),
                            Codigo = 8,
                            Descripcion = "Proveedor del Exterior",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        },
                        new
                        {
                            Id = new Guid("a3170338-f0d1-4f3d-a7ef-448a05b06068"),
                            Codigo = 9,
                            Descripcion = "Cliente del Exterior",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        },
                        new
                        {
                            Id = new Guid("c3fde773-daf2-4d33-bcf5-849e9fca645c"),
                            Codigo = 10,
                            Descripcion = "IVA Liberado - Ley 19.640",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        },
                        new
                        {
                            Id = new Guid("1ada86ac-d662-4d00-99aa-802492d73846"),
                            Codigo = 13,
                            Descripcion = "Monotributista Social",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        },
                        new
                        {
                            Id = new Guid("55ad18fb-4fa2-4230-ab7b-08fbca0b019c"),
                            Codigo = 15,
                            Descripcion = "IVA No Alcanzado",
                            EstaEliminado = false,
                            User = "semilla@tsidkenu.com"
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaEliminado")
                        .HasColumnType("bit");

                    b.Property<bool>("InicioPorPrimeraVez")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<Guid>("PersonaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.HasIndex("PersonaId");

                    b.ToTable("Usuarios", null, t =>
                        {
                            t.HasTrigger("Usuarios_Trigger");
                        });
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Articulo", b =>
                {
                    b.HasBaseType("Sidkenu.Dominio.Entidades.Core.ArticuloBase");

                    b.Property<bool>("ActivarBonificacion")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivarLimiteVenta")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ArticuloPadreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Bonificacion")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime?>("BonificacionFechaDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BonificacionFechaHasta")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Comision")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CondicionIvaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaBloqueado")
                        .HasColumnType("bit");

                    b.Property<bool>("FacturacionPorImporte")
                        .HasColumnType("bit");

                    b.Property<Guid>("FamiliaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FechaVigenciaKit")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Garantia")
                        .HasColumnType("int");

                    b.Property<decimal?>("LimiteVenta")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid>("MarcaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("NecesitaAutorizacion")
                        .HasColumnType("bit");

                    b.Property<bool>("PermiteStockNegativo")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PorcentajePerdida")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("PuntoPedido")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("Rentabilidad")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("StockMaximo")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("StockMinimo")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<bool>("TieneGarantia")
                        .HasColumnType("bit");

                    b.Property<bool>("TienePerdida")
                        .HasColumnType("bit");

                    b.Property<bool>("TieneRentabilidad")
                        .HasColumnType("bit");

                    b.Property<int?>("TipoBonificacion")
                        .HasColumnType("int");

                    b.Property<Guid>("UnidadMedidaCompraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnidadMedidaVentaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VarianteValorDosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VarianteValorUnoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("ArticuloPadreId");

                    b.HasIndex("CondicionIvaId");

                    b.HasIndex("FamiliaId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("UnidadMedidaCompraId");

                    b.HasIndex("UnidadMedidaVentaId");

                    b.HasIndex("VarianteValorDosId");

                    b.HasIndex("VarianteValorUnoId");

                    b.HasDiscriminator().HasValue("Articulo");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ArticuloBaja", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Articulo", "Articulo")
                        .WithMany("ArticuloBajas")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.MotivoBaja", "MotivoBaja")
                        .WithMany("ArticuloBajas")
                        .HasForeignKey("MotivoBajaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("MotivoBaja");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ArticuloDeposito", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Articulo", "Articulo")
                        .WithMany("ArticuloDepositos")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Deposito", "Deposito")
                        .WithMany("ArticuloDepositos")
                        .HasForeignKey("DepositoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Deposito");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ArticuloFormula", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Articulo", "Articulo")
                        .WithMany("ArticuloFormulas")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Articulo", "ArticuloSecundario")
                        .WithMany("ArticuloSecundarioFormulas")
                        .HasForeignKey("ArticuloSecundarioId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("ArticuloSecundario");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ArticuloHistorialCosto", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Articulo", "Articulo")
                        .WithMany("ArticuloHistorialCostos")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Articulo");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ArticuloKit", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Articulo", "ArticuloHijo")
                        .WithMany("ArticuloHijoKits")
                        .HasForeignKey("ArticuloHijoId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Articulo", "ArticuloPadre")
                        .WithMany("ArticuloPadreKits")
                        .HasForeignKey("ArticuloPadreId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("ArticuloHijo");

                    b.Navigation("ArticuloPadre");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ArticuloOpcional", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Articulo", "ArticuloHijo")
                        .WithMany("ArticuloHijoOpcionales")
                        .HasForeignKey("ArticuloHijoId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Articulo", "ArticuloPadre")
                        .WithMany("ArticuloPadreOpcionales")
                        .HasForeignKey("ArticuloPadreId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("ArticuloHijo");

                    b.Navigation("ArticuloPadre");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ArticuloPrecio", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Articulo", "Articulo")
                        .WithMany("ArticuloPrecios")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.ListaPrecio", "ListaPrecio")
                        .WithMany("Precios")
                        .HasForeignKey("ListaPrecioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("ListaPrecio");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ArticuloProveedor", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Articulo", "Articulo")
                        .WithMany("ArticuloProveedores")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Proveedor", "Proveedor")
                        .WithMany("ArticuloProveedores")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Caja", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("Cajas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.CajaDetalle", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Caja", "Caja")
                        .WithMany("CajaDetalles")
                        .HasForeignKey("CajaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Persona", "PersonaApertura")
                        .WithMany("CajaDetalleAperturas")
                        .HasForeignKey("PersonaAperturaId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Persona", "PersonaCierre")
                        .WithMany("CajaDetalleCierres")
                        .HasForeignKey("PersonaCierreId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Caja");

                    b.Navigation("PersonaApertura");

                    b.Navigation("PersonaCierre");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Cliente", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("Clientes")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.ListaPrecio", "ListaPrecio")
                        .WithMany("Clientes")
                        .HasForeignKey("ListaPrecioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.TipoDocumento", "TipoDocumento")
                        .WithMany("Clientes")
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.TipoResponsabilidad", "TipoResponsabilidad")
                        .WithMany("Clientes")
                        .HasForeignKey("TipoResponsabilidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("ListaPrecio");

                    b.Navigation("TipoDocumento");

                    b.Navigation("TipoResponsabilidad");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ComprobanteCompra", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Proveedor", "Proveedor")
                        .WithMany("ComprobantesCompras")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ComprobanteSalon", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Mesa", "Mesa")
                        .WithMany("ComprobantesSalones")
                        .HasForeignKey("MesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Persona", "Persona")
                        .WithMany("ComprobantesSalones")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mesa");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.CondicionIva", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("CondicionIvas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ConfiguracionBalanza", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("ConfiguracionBalanzas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ConfiguracionCore", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Deposito", "DepositoPorDefectoParaCompra")
                        .WithMany("ConfiguracionCoreDepositoPorDefectoParaCompras")
                        .HasForeignKey("DepositoPorDefectoParaCompraId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Deposito", "DepositoPorDefectoParaVenta")
                        .WithMany("ConfiguracionCoreDepositoPorDefectoParaVentas")
                        .HasForeignKey("DepositoPorDefectoParaVentaId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("ConfiguracionCores")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.ListaPrecio", "ListaPrecioPorDefectoParaVenta")
                        .WithMany("ConfiguracionCoreListaPrecios")
                        .HasForeignKey("ListaPrecioPorDefectoParaVentaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DepositoPorDefectoParaCompra");

                    b.Navigation("DepositoPorDefectoParaVenta");

                    b.Navigation("Empresa");

                    b.Navigation("ListaPrecioPorDefectoParaVenta");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Contador", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("Contadores")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.CostoFabricacion", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("CostoFabricaciones")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.CuentaCorrienteCliente", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Cliente", "Cliente")
                        .WithMany("CuentaCorrienteClientes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.CuentaCorrienteProveedor", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.ComprobanteCompra", "ComprobanteCompra")
                        .WithMany("CuentaCorrienteProveedores")
                        .HasForeignKey("ComprobanteCompraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ComprobanteCompra");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Deposito", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("Depositos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Persona", "Persona")
                        .WithMany("Depositos")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Familia", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("Familias")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.FamiliaCaja", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Caja", "Caja")
                        .WithMany("FamiliaCajas")
                        .HasForeignKey("CajaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Familia", "Familia")
                        .WithMany("FamiliaCajas")
                        .HasForeignKey("FamiliaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Caja");

                    b.Navigation("Familia");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.FamiliaListaPrecio", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("FamiliaListaPrecios")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Familia", "Familia")
                        .WithMany("FamiliaListaPrecios")
                        .HasForeignKey("FamiliaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.ListaPrecio", "ListaPrecio")
                        .WithMany("FamiliaListaPrecios")
                        .HasForeignKey("ListaPrecioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Familia");

                    b.Navigation("ListaPrecio");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Gasto", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("Gastos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.TipoGasto", "TipoGasto")
                        .WithMany("Gastos")
                        .HasForeignKey("TipoGastoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("TipoGasto");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ListaPrecio", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("ListaPrecios")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Marca", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("Marcas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.MarcaListaPrecio", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("MarcaListaPrecios")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.ListaPrecio", "ListaPrecio")
                        .WithMany("MarcaListaPrecios")
                        .HasForeignKey("ListaPrecioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Marca", "Marca")
                        .WithMany("MarcaListaPrecios")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("ListaPrecio");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Mesa", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Salon", "Salon")
                        .WithMany("Mesas")
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.MotivoBaja", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("MotivoBajas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.MovimientoCaja", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.CajaDetalle", "CajaDetalle")
                        .WithMany("MovimientoCajaDetalles")
                        .HasForeignKey("CajaDetalleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CajaDetalle");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.MovimientoCtaCteCliente", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.CajaDetalle", "CajaDetalle")
                        .WithMany("MovimientoCtaCteClientes")
                        .HasForeignKey("CajaDetalleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.CuentaCorrienteCliente", "CuentaCorrienteCliente")
                        .WithMany("MovimientoCtaCteClientes")
                        .HasForeignKey("CuentaCorrienteClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CajaDetalle");

                    b.Navigation("CuentaCorrienteCliente");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.MovimientoCtaCteProveedor", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.CajaDetalle", "CajaDetalle")
                        .WithMany("MovimientoCtaCteProveedores")
                        .HasForeignKey("CajaDetalleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.CuentaCorrienteProveedor", "CuentaCorrienteProveedor")
                        .WithMany("MovimientoCtaCteProveedores")
                        .HasForeignKey("CuentaCorrienteProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CajaDetalle");

                    b.Navigation("CuentaCorrienteProveedor");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.MovimientoGasto", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.CajaDetalle", "CajaDetalle")
                        .WithMany("MovimientoGastos")
                        .HasForeignKey("CajaDetalleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Gasto", "Gasto")
                        .WithMany("MovimientoGastos")
                        .HasForeignKey("GastoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CajaDetalle");

                    b.Navigation("Gasto");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.OrdenFabricacion", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Articulo", "ArticuloBase")
                        .WithMany("OrdenFabricaciones")
                        .HasForeignKey("ArticuloBaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Deposito", "DepositoDestino")
                        .WithMany("OrdenFabricacionDestinos")
                        .HasForeignKey("DepositoDestinoId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Deposito", "DepositoOrigen")
                        .WithMany("OrdenFabricacionOrigenes")
                        .HasForeignKey("DepositoOrigenId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("OrdenFabricaciones")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ArticuloBase");

                    b.Navigation("DepositoDestino");

                    b.Navigation("DepositoOrigen");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.OrdenFabricacionDetalle", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Articulo", "Articulo")
                        .WithMany("OrdenFabricacionDetalles")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.OrdenFabricacion", "OrdenFabricacion")
                        .WithMany("OrdenFabricacionDetalles")
                        .HasForeignKey("OrdenFabricacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("OrdenFabricacion");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.PlanTarjeta", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Tarjeta", "Tarjeta")
                        .WithMany("PlanesTarjetas")
                        .HasForeignKey("TarjetaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tarjeta");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Proveedor", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("Proveedores")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.TipoResponsabilidad", "TipoResponsabilidad")
                        .WithMany("Proveedores")
                        .HasForeignKey("TipoResponsabilidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("TipoResponsabilidad");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Salon", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("Salones")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.ListaPrecio", "ListaPrecio")
                        .WithMany()
                        .HasForeignKey("ListaPrecioId");

                    b.Navigation("Empresa");

                    b.Navigation("ListaPrecio");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.TipoGasto", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("TipoGastos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.UnidadMedida", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("UnidadMedidas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Variante", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("Variantes")
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.VarianteValor", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Variante", "Variante")
                        .WithMany("VarianteValores")
                        .HasForeignKey("VarianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Variante");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.Empresa", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.IngresoBruto", "IngresoBruto")
                        .WithMany("Empresas")
                        .HasForeignKey("IngresoBrutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Localidad", "Localidad")
                        .WithMany("Empresas")
                        .HasForeignKey("LocalidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.TipoResponsabilidad", "TipoResponsabilidad")
                        .WithMany("Empresas")
                        .HasForeignKey("TipoResponsabilidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IngresoBruto");

                    b.Navigation("Localidad");

                    b.Navigation("TipoResponsabilidad");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.EmpresaPersona", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("EmpresasPersonas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Persona", "Persona")
                        .WithMany("EmpresaPersonas")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.Grupo", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("Grupos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.GrupoFormulario", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Formulario", "Formulario")
                        .WithMany("GruposFormularios")
                        .HasForeignKey("FormularioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Grupo", "Grupo")
                        .WithMany("GrupoFormularios")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Formulario");

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.GrupoPersona", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Grupo", "Grupo")
                        .WithMany("GrupoPersonas")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Persona", "Persona")
                        .WithMany("GrupoPersonas")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.Localidad", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Provincia", "Provincia")
                        .WithMany("Localidades")
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.Modulo", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("Modulos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.Usuario", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Persona", "Persona")
                        .WithMany("Usuarios")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Articulo", b =>
                {
                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Articulo", "ArticuloPadre")
                        .WithMany()
                        .HasForeignKey("ArticuloPadreId");

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.CondicionIva", "CondicionIva")
                        .WithMany("Articulos")
                        .HasForeignKey("CondicionIvaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Seguridad.Empresa", "Empresa")
                        .WithMany("Articulos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Familia", "Familia")
                        .WithMany("Articulos")
                        .HasForeignKey("FamiliaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.Marca", "Marca")
                        .WithMany("Articulos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.UnidadMedida", "UnidadMedidaCompra")
                        .WithMany("ArticulosCompras")
                        .HasForeignKey("UnidadMedidaCompraId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.UnidadMedida", "UnidadMedidaVenta")
                        .WithMany("ArticulosVentas")
                        .HasForeignKey("UnidadMedidaVentaId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.VarianteValor", "VarianteValorDos")
                        .WithMany("ArticuloDos")
                        .HasForeignKey("VarianteValorDosId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Sidkenu.Dominio.Entidades.Core.VarianteValor", "VarianteValorUno")
                        .WithMany("ArticuloUnos")
                        .HasForeignKey("VarianteValorUnoId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("ArticuloPadre");

                    b.Navigation("CondicionIva");

                    b.Navigation("Empresa");

                    b.Navigation("Familia");

                    b.Navigation("Marca");

                    b.Navigation("UnidadMedidaCompra");

                    b.Navigation("UnidadMedidaVenta");

                    b.Navigation("VarianteValorDos");

                    b.Navigation("VarianteValorUno");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Caja", b =>
                {
                    b.Navigation("CajaDetalles");

                    b.Navigation("FamiliaCajas");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.CajaDetalle", b =>
                {
                    b.Navigation("MovimientoCajaDetalles");

                    b.Navigation("MovimientoCtaCteClientes");

                    b.Navigation("MovimientoCtaCteProveedores");

                    b.Navigation("MovimientoGastos");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Cliente", b =>
                {
                    b.Navigation("CuentaCorrienteClientes");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ComprobanteCompra", b =>
                {
                    b.Navigation("CuentaCorrienteProveedores");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.CondicionIva", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.CuentaCorrienteCliente", b =>
                {
                    b.Navigation("MovimientoCtaCteClientes");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.CuentaCorrienteProveedor", b =>
                {
                    b.Navigation("MovimientoCtaCteProveedores");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Deposito", b =>
                {
                    b.Navigation("ArticuloDepositos");

                    b.Navigation("ConfiguracionCoreDepositoPorDefectoParaCompras");

                    b.Navigation("ConfiguracionCoreDepositoPorDefectoParaVentas");

                    b.Navigation("OrdenFabricacionDestinos");

                    b.Navigation("OrdenFabricacionOrigenes");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Familia", b =>
                {
                    b.Navigation("Articulos");

                    b.Navigation("FamiliaCajas");

                    b.Navigation("FamiliaListaPrecios");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Gasto", b =>
                {
                    b.Navigation("MovimientoGastos");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.ListaPrecio", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("ConfiguracionCoreListaPrecios");

                    b.Navigation("FamiliaListaPrecios");

                    b.Navigation("MarcaListaPrecios");

                    b.Navigation("Precios");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Marca", b =>
                {
                    b.Navigation("Articulos");

                    b.Navigation("MarcaListaPrecios");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Mesa", b =>
                {
                    b.Navigation("ComprobantesSalones");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.MotivoBaja", b =>
                {
                    b.Navigation("ArticuloBajas");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.OrdenFabricacion", b =>
                {
                    b.Navigation("OrdenFabricacionDetalles");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Proveedor", b =>
                {
                    b.Navigation("ArticuloProveedores");

                    b.Navigation("ComprobantesCompras");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Salon", b =>
                {
                    b.Navigation("Mesas");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Tarjeta", b =>
                {
                    b.Navigation("PlanesTarjetas");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.TipoDocumento", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.TipoGasto", b =>
                {
                    b.Navigation("Gastos");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.UnidadMedida", b =>
                {
                    b.Navigation("ArticulosCompras");

                    b.Navigation("ArticulosVentas");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Variante", b =>
                {
                    b.Navigation("VarianteValores");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.VarianteValor", b =>
                {
                    b.Navigation("ArticuloDos");

                    b.Navigation("ArticuloUnos");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.Empresa", b =>
                {
                    b.Navigation("Articulos");

                    b.Navigation("Cajas");

                    b.Navigation("Clientes");

                    b.Navigation("CondicionIvas");

                    b.Navigation("ConfiguracionBalanzas");

                    b.Navigation("ConfiguracionCores");

                    b.Navigation("Contadores");

                    b.Navigation("CostoFabricaciones");

                    b.Navigation("Depositos");

                    b.Navigation("EmpresasPersonas");

                    b.Navigation("FamiliaListaPrecios");

                    b.Navigation("Familias");

                    b.Navigation("Gastos");

                    b.Navigation("Grupos");

                    b.Navigation("ListaPrecios");

                    b.Navigation("MarcaListaPrecios");

                    b.Navigation("Marcas");

                    b.Navigation("Modulos");

                    b.Navigation("MotivoBajas");

                    b.Navigation("OrdenFabricaciones");

                    b.Navigation("Proveedores");

                    b.Navigation("Salones");

                    b.Navigation("TipoGastos");

                    b.Navigation("UnidadMedidas");

                    b.Navigation("Variantes");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.Formulario", b =>
                {
                    b.Navigation("GruposFormularios");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.Grupo", b =>
                {
                    b.Navigation("GrupoFormularios");

                    b.Navigation("GrupoPersonas");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.IngresoBruto", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.Localidad", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.Persona", b =>
                {
                    b.Navigation("CajaDetalleAperturas");

                    b.Navigation("CajaDetalleCierres");

                    b.Navigation("ComprobantesSalones");

                    b.Navigation("Depositos");

                    b.Navigation("EmpresaPersonas");

                    b.Navigation("GrupoPersonas");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.Provincia", b =>
                {
                    b.Navigation("Localidades");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Seguridad.TipoResponsabilidad", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Empresas");

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("Sidkenu.Dominio.Entidades.Core.Articulo", b =>
                {
                    b.Navigation("ArticuloBajas");

                    b.Navigation("ArticuloDepositos");

                    b.Navigation("ArticuloFormulas");

                    b.Navigation("ArticuloHijoKits");

                    b.Navigation("ArticuloHijoOpcionales");

                    b.Navigation("ArticuloHistorialCostos");

                    b.Navigation("ArticuloPadreKits");

                    b.Navigation("ArticuloPadreOpcionales");

                    b.Navigation("ArticuloPrecios");

                    b.Navigation("ArticuloProveedores");

                    b.Navigation("ArticuloSecundarioFormulas");

                    b.Navigation("OrdenFabricacionDetalles");

                    b.Navigation("OrdenFabricaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
